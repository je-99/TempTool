[{"C:\\Users\\jaehr\\Documents\\TempTool\\web\\src\\index.tsx":"1","C:\\Users\\jaehr\\Documents\\TempTool\\web\\src\\reportWebVitals.ts":"2","C:\\Users\\jaehr\\Documents\\TempTool\\web\\src\\App.tsx":"3","C:\\Users\\jaehr\\Documents\\TempTool\\web\\src\\components\\elements\\StatCard.tsx":"4","C:\\Users\\jaehr\\Documents\\TempTool\\web\\src\\components\\Home\\Home.tsx":"5","C:\\Users\\jaehr\\Documents\\TempTool\\web\\src\\components\\Dashboard\\Dashboard.tsx":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":733,"mtime":1609011405078,"results":"10","hashOfConfig":"8"},{"size":433,"mtime":1607781221483,"results":"11","hashOfConfig":"8"},{"size":3555,"mtime":1609057933900,"results":"12","hashOfConfig":"8"},{"size":597,"mtime":1609057946214,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1q52v",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\jaehr\\Documents\\TempTool\\web\\src\\index.tsx",[],["30","31"],"C:\\Users\\jaehr\\Documents\\TempTool\\web\\src\\reportWebVitals.ts",[],"C:\\Users\\jaehr\\Documents\\TempTool\\web\\src\\App.tsx",["32","33"],"import React, {useState} from 'react';\nimport {Home} from \"./components/Home/Home\";\nimport {Header} from \"antd/es/layout/layout\";\nimport {Menu} from \"antd\";\nimport { Dashboard } from './components/Dashboard/Dashboard';\n\n\nfunction App() {\n\nconst [menuSelection, setMenuSelection] = useState(1);\n\nconst handleClickMenu = (e: any) => {\n  setMenuSelection(e.key);\n}\n\nreturn (\n  <div>\n    <Header>\n      <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']} onSelect={handleClickMenu}>\n        <Menu.Item key=\"1\">Überblick</Menu.Item>\n        <Menu.Item key=\"2\">Dashboard</Menu.Item>\n      </Menu>\n    </Header>\n    {menuSelection == 1 && <Home/>}\n    {menuSelection == 2 && <Dashboard/>}\n  </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\jaehr\\Documents\\TempTool\\web\\src\\components\\elements\\StatCard.tsx",[],["34","35"],"C:\\Users\\jaehr\\Documents\\TempTool\\web\\src\\components\\Home\\Home.tsx",["36"],"import React, {useEffect, useState} from 'react';\r\nimport {Content} from \"antd/es/layout/layout\";\r\nimport {Col, Row, Card, Space, Skeleton} from \"antd\";\r\nimport 'antd/dist/antd.css'\r\nimport './home.css'\r\nimport '../../App.css'\r\nimport {StatCard} from \"../elements/StatCard\";\r\nimport { Typography } from 'antd';\r\n\r\n\r\n\r\nexport function Home(){\r\n\r\n    const { Title } = Typography;\r\n\r\n    const [temperature, setTemperature] = useState(<Skeleton title active paragraph={false}/>);\r\n    const [humidity, setHumidity] = useState(<Skeleton title active paragraph={false}/>);\r\n    const [pressure, setPressure] = useState(<Skeleton title active paragraph={false}/>);\r\n\r\n    const hostname = window.location.hostname;\r\n\r\n    const iframeTemp = () => {\r\n        return {\r\n            __html: '<iframe src=\"http://' + hostname + ':3000/d-solo/uMYK1czRz/sensors?orgId=1&refresh=30s&theme=light&panelId=2\" height=100% width=100% frameborder=\"0\"></iframe>'\r\n        }\r\n    }\r\n\r\n    const iframeHumi = () => {\r\n        return {\r\n            __html: '<iframe src=\"http://' + hostname + ':3000/d-solo/uMYK1czRz/sensors?orgId=1&refresh=30s&theme=light&panelId=4\" height=100% width=100% frameborder=\"0\"></iframe>'\r\n        }\r\n    }\r\n\r\n    const iframePres = () => {\r\n        return {\r\n            __html: '<iframe src=\"http://' + hostname + ':3000/d-solo/uMYK1czRz/sensors?orgId=1&refresh=30s&theme=light&panelId=6\" height=100% width=100% frameborder=\"0\"></iframe>'\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://' + hostname + ':5000/api/v1/temperature\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result)\r\n                    setTemperature(<Title level={2}>{result.value + \" °C\"}</Title>)\r\n                }\r\n            );\r\n        fetch(\"http://' + hostname + ':5000/api/v1/humidity\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result)\r\n                    setHumidity(<Title level={2}>{result.value + \" %\"}</Title>)\r\n                }\r\n            );\r\n        fetch(\"http://' + hostname + ':5000/api/v1/pressure\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result)\r\n                    setPressure(<Title level={2}>{result.value + \" hPa\"}</Title>)\r\n                }\r\n            );\r\n    }, [])\r\n\r\n    return(\r\n    <Content className=\"appContent\">\r\n        <Row className=\"homeRow\">\r\n            <Col span={8} style={{padding: 3}}>\r\n                <StatCard title=\"Aktuelle Temperatur\" value={temperature}/>\r\n            </Col>\r\n            <Col span={8} style={{padding: 3}}>\r\n                <StatCard title=\"Aktuelle Luftfeuchtigkeit\" value={humidity}/>\r\n            </Col>\r\n            <Col span={8} style={{padding: 3}}>\r\n                <StatCard title=\"Aktueller Luftdruck\" value={pressure}/>\r\n            </Col>\r\n        </Row>\r\n        <Space className='graphContainer' direction=\"vertical\" size=\"small\">\r\n            <Card bordered={true}>\r\n                <div className='grafana' dangerouslySetInnerHTML={iframeTemp()}/>\r\n            </Card>\r\n            <Card bordered={true}>\r\n                <div className='grafana' dangerouslySetInnerHTML={iframeHumi()}/>\r\n            </Card>\r\n            <Card bordered={true}>\r\n                <div className='grafana' dangerouslySetInnerHTML={iframePres()}/>\r\n            </Card>\r\n        </Space>\r\n        \r\n        \r\n        \r\n    </Content>\r\n    )\r\n}\r\n","C:\\Users\\jaehr\\Documents\\TempTool\\web\\src\\components\\Dashboard\\Dashboard.tsx",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":24,"column":20,"nodeType":"43","messageId":"44","endLine":24,"endColumn":22},{"ruleId":"41","severity":1,"message":"42","line":25,"column":20,"nodeType":"43","messageId":"44","endLine":25,"endColumn":22},{"ruleId":"37","replacedBy":"45"},{"ruleId":"39","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":65,"column":8,"nodeType":"49","endLine":65,"endColumn":10,"suggestions":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["51"],["52"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Title'. Either include it or remove the dependency array.","ArrayExpression",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [Title]",{"range":"56","text":"57"},[2435,2437],"[Title]"]