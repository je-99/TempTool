{"version":3,"sources":["components/elements/StatCard.tsx","components/Home/Home.tsx","components/Dashboard/Dashboard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Title","Typography","StatCard","title","value","bordered","level","Home","useState","active","paragraph","temperature","setTemperature","humidity","setHumidity","pressure","setPressure","useEffect","fetch","then","res","json","result","console","log","className","span","style","padding","direction","size","dangerouslySetInnerHTML","__html","Dashboard","App","menuSelection","setMenuSelection","theme","mode","defaultSelectedKeys","onSelect","e","key","Item","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbd99dec.chunk.js","sourcesContent":["import React, {FunctionComponent} from 'react';\r\nimport {Card} from \"antd\";\r\nimport 'antd/dist/antd.css'\r\nimport { Typography } from 'antd';\r\n\r\ntype StatCardProps = {\r\n    title: string,\r\n    value: any\r\n}\r\n\r\nconst { Title } = Typography;\r\n\r\nexport const StatCard: FunctionComponent<StatCardProps> = ({title, value}: StatCardProps) =>\r\n    <Card title={title} bordered={true}>\r\n        <Title level={2}>{value}</Title>\r\n    </Card>\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Content} from \"antd/es/layout/layout\";\r\nimport {Col, Row, Card, Space, Skeleton} from \"antd\";\r\nimport 'antd/dist/antd.css'\r\nimport './home.css'\r\nimport '../../App.css'\r\nimport {StatCard} from \"../elements/StatCard\";\r\nimport { Typography } from 'antd';\r\n\r\n\r\n\r\nexport function Home(){\r\n\r\n    const { Title } = Typography;\r\n\r\n    const [temperature, setTemperature] = useState(<Skeleton title active paragraph={false}/>);\r\n    const [humidity, setHumidity] = useState(<Skeleton title active paragraph={false}/>);\r\n    const [pressure, setPressure] = useState(<Skeleton title active paragraph={false}/>);\r\n\r\n    const iframeTemp = () => {\r\n        return {\r\n            __html: '<iframe src=\"http://raspberrypi.fritz.box:3000/d-solo/uMYK1czRz/sensors?orgId=1&refresh=30s&theme=light&panelId=2\" height=100% width=100% frameborder=\"0\"></iframe>'\r\n        }\r\n    }\r\n\r\n    const iframeHumi = () => {\r\n        return {\r\n            __html: '<iframe src=\"http://raspberrypi.fritz.box:3000/d-solo/uMYK1czRz/sensors?orgId=1&refresh=30s&theme=light&panelId=4\" height=100% width=100% frameborder=\"0\"></iframe>'\r\n        }\r\n    }\r\n\r\n    const iframePres = () => {\r\n        return {\r\n            __html: '<iframe src=\"http://raspberrypi.fritz.box:3000/d-solo/uMYK1czRz/sensors?orgId=1&refresh=30s&theme=light&panelId=6\" height=100% width=100% frameborder=\"0\"></iframe>'\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://raspberrypi.fritz.box:5000/api/v1/temperature\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result)\r\n                    setTemperature(<Title level={2}>{result.value + \" °C\"}</Title>)\r\n                }\r\n            );\r\n        fetch(\"http://raspberrypi.fritz.box:5000/api/v1/humidity\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result)\r\n                    setHumidity(<Title level={2}>{result.value + \" %\"}</Title>)\r\n                }\r\n            );\r\n        fetch(\"http://raspberrypi.fritz.box:5000/api/v1/pressure\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result)\r\n                    setPressure(<Title level={2}>{result.value + \" hPa\"}</Title>)\r\n                }\r\n            );\r\n    }, [])\r\n\r\n    return(\r\n    <Content className=\"appContent\">\r\n        <Title className=\"appHeading\">Überblick</Title>\r\n        <Row className=\"homeRow\">\r\n            <Col span={8} style={{padding: 3}}>\r\n                <StatCard title=\"Aktuelle Temperatur\" value={temperature}/>\r\n            </Col>\r\n            <Col span={8} style={{padding: 3}}>\r\n                <StatCard title=\"Aktuelle Luftfeuchtigkeit\" value={humidity}/>\r\n            </Col>\r\n            <Col span={8} style={{padding: 3}}>\r\n                <StatCard title=\"Aktueller Luftdruck\" value={pressure}/>\r\n            </Col>\r\n        </Row>\r\n        <Space className='graphContainer' direction=\"vertical\" size=\"small\">\r\n            <Card bordered={true}>\r\n                <div className='grafana' dangerouslySetInnerHTML={iframeTemp()}/>\r\n            </Card>\r\n            <Card bordered={true}>\r\n                <div className='grafana' dangerouslySetInnerHTML={iframeHumi()}/>\r\n            </Card>\r\n            <Card bordered={true}>\r\n                <div className='grafana' dangerouslySetInnerHTML={iframePres()}/>\r\n            </Card>\r\n        </Space>\r\n        \r\n        \r\n        \r\n    </Content>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Content} from \"antd/es/layout/layout\";\r\nimport 'antd/dist/antd.css'\r\nimport '../../App.css'\r\n\r\n\r\nexport function Dashboard(){\r\n\r\n    const iframe = () => {\r\n        return {\r\n            __html: '<iframe src=\"http://raspberrypi.fritz.box:3000/d/uMYK1czRz/sensors?orgId=1&refresh=30s\" height=100% width=100% frameborder=\"0\"></iframe>'\r\n        }\r\n    }\r\n\r\n    return(\r\n    <Content className='grafanaDashboard'>\r\n        <div className='grafanaDashboard' dangerouslySetInnerHTML={iframe()}/>\r\n    </Content>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\nimport {Home} from \"./components/Home/Home\";\nimport {Header} from \"antd/es/layout/layout\";\nimport {Menu} from \"antd\";\nimport { Dashboard } from './components/Dashboard/Dashboard';\n\n\nfunction App() {\n\nconst [menuSelection, setMenuSelection] = useState(1);\n\nconst handleClickMenu = (e: any) => {\n  setMenuSelection(e.key);\n}\n\nreturn (\n  <div>\n    <Header>\n      <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']} onSelect={handleClickMenu}>\n        <Menu.Item key=\"1\">Überblick</Menu.Item>\n        <Menu.Item key=\"2\">Dashboard</Menu.Item>\n        <Menu.Item key=\"3\">Einstellungen</Menu.Item>\n      </Menu>\n    </Header>\n    {menuSelection === 1 && <Home/>}\n    {menuSelection === 2 && <Dashboard/>}\n    {menuSelection === 3 && <Home/>}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}